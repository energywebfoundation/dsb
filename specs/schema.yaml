openapi: "3.0.0"
info:
  title: "DSB Message Broker API"
  description: "Swagger documentation for the DSB Message Broker API"
  version: "0.1"
  contact: {}
tags: []
servers: []
components:
  schemas:
    PublishMessageDto:
      type: "object"
      properties:
        fqcn:
          type: "string"
          description: "Fully qualified channel name (fcqn)"
          example: "test.channels.testapp.apps.testorganization.iam.ewc"
        payload:
          type: "string"
          description: "Any stringified payload like JSON, BASE64 etc"
          example: "{\"data\": \"test\"}"
        signature:
          type: "string"
          description: "Compacted EcdsaSecp256k1Signature2019"
      required:
        - "fqcn"
        - "payload"
        - "signature"
    MessageDTO:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Message id"
          example: "msg-#1"
        payload:
          type: "string"
          description: "Any stringified payload like JSON, BASE64 etc"
          example: "{\"data\": \"test\"}"
        sender:
          type: "string"
          description: "Sender of the message"
          example: "did:ethr:0x57618002cF07E53De4a5abf1e8735882169f2efB"
        signature:
          type: "string"
          description: "Compacted EcdsaSecp256k1Signature2019"
      required:
        - "id"
        - "payload"
        - "sender"
        - "signature"
    CreateChannelDto:
      type: "object"
      properties:
        fqcn:
          type: "string"
          description: "Fully qualified channel name (fcqn)"
          example: "test.channels.testapp.apps.testorganization.iam.ewc"
      required:
        - "fqcn"
    LoginDataDTO:
      type: "object"
      properties:
        identityToken:
          type: "string"
          description: "ES256 signed JWT token"
      required:
        - "identityToken"
    LoginReturnDataDTO:
      type: "object"
      properties:
        did:
          type: "string"
          description: "DID of messagebroker which is the DID identifier corresponding to env.PRIVATE_KEY"
        address:
          type: "string"
          description: "address of the env.PRIVATE_KEY for signature recovery purposes"
        signature:
          type: "string"
          description: "the compact hex signature which is ECDSA hash(address of privatekey+messagebrokerDID+userDID)"
      required:
        - "did"
        - "address"
        - "signature"
paths:
  /message:
    post:
      operationId: "MessageController_publish"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublishMessageDto"
      responses:
        202:
          description: "Message id that is local to fqcn"
          content:
            application/json:
              schema:
                type: "string"
      tags:
        - "message"
      security:
        - access-token: []
    get:
      operationId: "MessageController_getNewFromChannel"
      parameters:
        - name: "fqcn"
          required: true
          in: "query"
          description: "Fully qualified channel name (fqcn)"
          example: "test.channels.testapp.apps.testorganization.iam.ewc"
          schema:
            type: "string"
        - name: "amount"
          required: false
          in: "query"
          description: "Amount of messages to be returned in the request, default value is 100"
          example: "100"
          schema:
            type: "string"
      responses:
        200:
          description: "Pull and returns messages from given channel"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/MessageDTO"
      tags:
        - "message"
      security:
        - access-token: []
  /channel:
    post:
      operationId: "ChannelController_create"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateChannelDto"
      responses:
        202:
          description: "Creates a channel"
          content:
            application/json:
              schema:
                type: "string"
      tags:
        - "channel"
      security:
        - access-token: []
  /health:
    get:
      operationId: "HealthController_check"
      parameters: []
      responses:
        200:
          description: "The Health Check is successful"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    example: "ok"
                  info:
                    type: "object"
                    example:
                      database:
                        status: "up"
                    additionalProperties:
                      type: "object"
                      properties:
                        status:
                          type: "string"
                      additionalProperties:
                        type: "string"
                    nullable: true
                  error:
                    type: "object"
                    example: {}
                    additionalProperties:
                      type: "object"
                      properties:
                        status:
                          type: "string"
                      additionalProperties:
                        type: "string"
                    nullable: true
                  details:
                    type: "object"
                    example:
                      database:
                        status: "up"
                    additionalProperties:
                      type: "object"
                      properties:
                        status:
                          type: "string"
                      additionalProperties:
                        type: "string"
        503:
          description: "The Health Check is not successful"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    example: "error"
                  info:
                    type: "object"
                    example:
                      database:
                        status: "up"
                    additionalProperties:
                      type: "object"
                      properties:
                        status:
                          type: "string"
                      additionalProperties:
                        type: "string"
                    nullable: true
                  error:
                    type: "object"
                    example:
                      redis:
                        status: "down"
                        message: "Could not connect"
                    additionalProperties:
                      type: "object"
                      properties:
                        status:
                          type: "string"
                      additionalProperties:
                        type: "string"
                    nullable: true
                  details:
                    type: "object"
                    example:
                      database:
                        status: "up"
                      redis:
                        status: "down"
                        message: "Could not connect"
                    additionalProperties:
                      type: "object"
                      properties:
                        status:
                          type: "string"
                      additionalProperties:
                        type: "string"
      tags:
        - "health"
  /auth/login:
    post:
      operationId: "AuthController_login"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginDataDTO"
      responses:
        200:
          description: "Log in"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginReturnDataDTO"
      tags:
        - "auth"
      security:
        - access-token: []
