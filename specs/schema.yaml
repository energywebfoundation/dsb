openapi: "3.0.0"
info:
  title: "DSB Message Broker API"
  description: "Swagger documentation for the DSB Message Broker API"
  version: "0.1"
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    access-token:
      scheme: "bearer"
      bearerFormat: "JWT"
      type: "http"
  schemas:
    PublishMessageDto:
      type: "object"
      properties:
        fqcn:
          type: "string"
          format: "{channel_name}.channels.{app_name}.apps.{organization_name}.iam.ewc"
          example: "testChannel.channels.dsb.apps.energyweb.iam.ewc"
          description: "Fully Qualified Channel Name (fcqn)"
        topic:
          type: "string"
          example: "testTopic"
          description: "Topic name of the channel (default value is \"default\")"
        payload:
          type: "string"
          description: "Any stringified payload like JSON, BASE64 etc"
          example: "{\"data\": \"testData\"}"
        signature:
          type: "string"
          description: "Compacted EcdsaSecp256k1Signature2019"
      required:
        - "fqcn"
        - "payload"
        - "signature"
    MessageDto:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Message id"
          example: "msg-#1"
        topic:
          type: "string"
          description: "Message topic"
          example: "default"
        payload:
          type: "string"
          description: "Any stringified payload like JSON, BASE64 etc"
          example: "{\"data\": \"testData\"}"
        signature:
          type: "string"
          description: "Compacted EcdsaSecp256k1Signature2019"
        sender:
          type: "string"
          description: "Sender of the message"
          example: "did:ethr:0x57618002cF07E53De4a5abf1e8735882169f2efB"
        timestampNanos:
          type: "number"
          description: "Message published timestamp in nanoseconds"
      required:
        - "id"
        - "topic"
        - "payload"
        - "signature"
        - "sender"
        - "timestampNanos"
    CreateChannelDto:
      type: "object"
      properties:
        fqcn:
          type: "string"
          format: "{channel_name}.channels.{app_name}.apps.{organization_name}.iam.ewc"
          example: "testChannel.channels.dsb.apps.energyweb.iam.ewc"
          description: "Fully Qualified Channel Name (fcqn)"
        topics:
          properties:
            namespace:
              type: "string"
            schema:
              type: "string | JSONSchemaType"
          description: "Array of topic objects that determines topics for messages."
          example:
            - namespace: "testTopic"
              schema: "{\"type\": \"object\",\"properties\": {\"data\": {\"type\": \"string\"}},\"required\": [\"data\"],\"additionalProperties\": false}"
          type: "array"
          items:
            type: "string"
        admins:
          description: "Array of DIDs that have permission to edit the channel. If it is omitted, creator of the channel will be the default admin."
          example:
            - "did:ethr:0x5aEa5Bf5c5b341A0BFhryv5b51b77Fb9807F1b52"
          type: "array"
          items:
            type: "string"
        publishers:
          description: "A mixed array of DIDs and roles that have permission to publish messages to the channel. If it is omitted, any user with \"user\" role can publish messages to the channel."
          example:
            - "did:ethr:0x5aEa5Bf5c5b341A0BFhryv5b51b77Fb9807F1b52"
            - "user.roles.dsb.apps.energyweb.iam.ewc"
          type: "array"
          items:
            type: "string"
        subscribers:
          description: "A mixed array of DIDs and roles that have permission to subscribe to the channel. If it is omitted, any user with \"user\" role can subscribe to the channel."
          example:
            - "did:ethr:0x5aEa5Bf5c5b341A0BFhryv5b51b77Fb9807F1b52"
            - "user.roles.dsb.apps.energyweb.iam.ewc"
          type: "array"
          items:
            type: "string"
        maxMsgAge:
          type: "number"
          description: "Maximum age of any message in the channel, expressed in nanoseconds."
          example: 86400000000
        maxMsgSize:
          type: "number"
          description: "Maximum size of any message in the channel, expressed in bytes."
          example: 1000000
      required:
        - "fqcn"
    UpdateChannelDto:
      type: "object"
      properties:
        fqcn:
          type: "string"
          format: "{channel_name}.channels.{app_name}.apps.{organization_name}.iam.ewc"
          example: "testChannel.channels.dsb.apps.energyweb.iam.ewc"
          description: "Fully Qualified Channel Name (fcqn)"
        topics:
          properties:
            namespace:
              type: "string"
            schema:
              type: "string | JSONSchemaType"
          description: "Array of topic objects that determines topics for messages."
          example:
            - namespace: "testTopic"
              schema: "{\"type\": \"object\",\"properties\": {\"data\": {\"type\": \"string\"}},\"required\": [\"data\"],\"additionalProperties\": false}"
          type: "array"
          items:
            type: "string"
        admins:
          description: "Array of DIDs that have permission to edit the channel. If it is omitted, creator of the channel will be the default admin."
          example:
            - "did:ethr:0x5aEa5Bf5c5b341A0BFhryv5b51b77Fb9807F1b52"
          type: "array"
          items:
            type: "string"
        publishers:
          description: "A mixed array of DIDs and roles that have permission to publish messages to the channel. If it is omitted, any user with \"user\" role can publish messages to the channel."
          example:
            - "did:ethr:0x5aEa5Bf5c5b341A0BFhryv5b51b77Fb9807F1b52"
            - "user.roles.dsb.apps.energyweb.iam.ewc"
          type: "array"
          items:
            type: "string"
        subscribers:
          description: "A mixed array of DIDs and roles that have permission to subscribe to the channel. If it is omitted, any user with \"user\" role can subscribe to the channel."
          example:
            - "did:ethr:0x5aEa5Bf5c5b341A0BFhryv5b51b77Fb9807F1b52"
            - "user.roles.dsb.apps.energyweb.iam.ewc"
          type: "array"
          items:
            type: "string"
        maxMsgAge:
          type: "number"
          description: "Maximum age of any message in the channel, expressed in nanoseconds."
          example: 86400000000
        maxMsgSize:
          type: "number"
          description: "Maximum size of any message in the channel, expressed in bytes."
          example: 1000000
      required:
        - "fqcn"
    Channel:
      type: "object"
      properties: {}
    LoginDataDTO:
      type: "object"
      properties:
        identityToken:
          type: "string"
          description: "ES256 signed JWT token"
      required:
        - "identityToken"
    LoginReturnDataDTO:
      type: "object"
      properties:
        token:
          type: "string"
          description: "Bearer token"
        did:
          type: "string"
          description: "DID of the Message Broker"
        address:
          type: "string"
          description: "Address of the Message Broker for signature recovery purposes"
        signature:
          type: "string"
          description: "The compact hex ECDSA signature of keccak256(address+did+userDID)"
      required:
        - "token"
        - "did"
        - "address"
        - "signature"
paths:
  /message:
    post:
      operationId: "MessageController_publish"
      summary: ""
      description: "Pushes a message to a topic in a channel."
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublishMessageDto"
      responses:
        202:
          description: "Published message ID in the specified channel"
          content:
            application/json:
              schema:
                type: "string"
      tags:
        - "message"
      security:
        - access-token: []
    get:
      operationId: "MessageController_getNewFromChannel"
      summary: ""
      description: "Pulls new messages from the channel."
      parameters:
        - name: "amount"
          required: false
          in: "query"
          description: "Amount of messages to be returned in the request, default value is 100"
          example: "100"
          schema: {}
        - name: "fqcn"
          required: true
          in: "query"
          description: "Fully Qualified Channel Name (fqcn)"
          example: "testChannel.channels.dsb.apps.energyweb.iam.ewc"
          schema: {}
      responses:
        200:
          description: "Array of pulled messages from a given channel"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/MessageDto"
      tags:
        - "message"
      security:
        - access-token: []
  /channel:
    post:
      operationId: "ChannelController_createChannel"
      summary: ""
      description: "Creates a channel"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateChannelDto"
      responses:
        202:
          description: "Created channel's name"
          content:
            application/json:
              schema:
                type: "string"
      tags:
        - "channel"
      security:
        - access-token: []
    patch:
      operationId: "ChannelController_updateChannel"
      summary: ""
      description: "Updates a channel"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateChannelDto"
      responses:
        202:
          description: "Update result"
          content:
            application/json:
              schema:
                type: "string"
      tags:
        - "channel"
      security:
        - access-token: []
  /channel/pubsub:
    get:
      operationId: "ChannelController_getAccessibleChannels"
      summary: ""
      description: "Returns the list of accessible channels to publish or subscribe based on DID and verified-roles of the user"
      parameters: []
      responses:
        200:
          description: "Array of channels with their options"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Channel"
      tags:
        - "channel"
      security:
        - access-token: []
  /channel/{fqcn}:
    get:
      operationId: "ChannelController_getChannel"
      summary: ""
      description: "Returns the requested channel's options"
      parameters:
        - name: "fqcn"
          required: true
          in: "path"
          example: "testChannel.channels.dsb.apps.energyweb.iam.ewc"
          description: "Fully Qualified Channel Name (fcqn)"
          schema:
            format: "{channel_name}.channels.{app_name}.apps.{organization_name}.iam.ewc"
            type: "string"
      responses:
        200:
          description: "Channel options"
          content:
            application/json:
              schema:
                type: "object"
      tags:
        - "channel"
      security:
        - access-token: []
    delete:
      operationId: "ChannelController_removeChannel"
      summary: ""
      description: "Removes the channel"
      parameters:
        - name: "fqcn"
          required: true
          in: "path"
          example: "testChannel.channels.dsb.apps.energyweb.iam.ewc"
          description: "Fully Qualified Channel Name (fcqn)"
          schema:
            format: "{channel_name}.channels.{app_name}.apps.{organization_name}.iam.ewc"
            type: "string"
      responses:
        200:
          description: "Channel deletion result"
          content:
            application/json:
              schema:
                type: "string"
      tags:
        - "channel"
      security:
        - access-token: []
  /health:
    get:
      operationId: "HealthController_check"
      parameters: []
      responses:
        200:
          description: "The Health Check is successful"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    example: "ok"
                  info:
                    type: "object"
                    example:
                      database:
                        status: "up"
                    additionalProperties:
                      type: "object"
                      properties:
                        status:
                          type: "string"
                      additionalProperties:
                        type: "string"
                    nullable: true
                  error:
                    type: "object"
                    example: {}
                    additionalProperties:
                      type: "object"
                      properties:
                        status:
                          type: "string"
                      additionalProperties:
                        type: "string"
                    nullable: true
                  details:
                    type: "object"
                    example:
                      database:
                        status: "up"
                    additionalProperties:
                      type: "object"
                      properties:
                        status:
                          type: "string"
                      additionalProperties:
                        type: "string"
        503:
          description: "The Health Check is not successful"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    example: "error"
                  info:
                    type: "object"
                    example:
                      database:
                        status: "up"
                    additionalProperties:
                      type: "object"
                      properties:
                        status:
                          type: "string"
                      additionalProperties:
                        type: "string"
                    nullable: true
                  error:
                    type: "object"
                    example:
                      redis:
                        status: "down"
                        message: "Could not connect"
                    additionalProperties:
                      type: "object"
                      properties:
                        status:
                          type: "string"
                      additionalProperties:
                        type: "string"
                    nullable: true
                  details:
                    type: "object"
                    example:
                      database:
                        status: "up"
                      redis:
                        status: "down"
                        message: "Could not connect"
                    additionalProperties:
                      type: "object"
                      properties:
                        status:
                          type: "string"
                      additionalProperties:
                        type: "string"
      tags:
        - "health"
  /auth/login:
    post:
      operationId: "AuthController_login"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginDataDTO"
      responses:
        200:
          description: "Log in"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginReturnDataDTO"
      tags:
        - "auth"
